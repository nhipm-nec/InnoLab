{
  "rag_documents": [
    {
      "content": "Bug Exception Rule: Use of 'assert' is permitted in dev or short-lived internal CLI scripts. Pattern: assert. Bug ID: python:S1751. Context: CLI tool or internal script. Reason: Acceptable for runtime validation in internal tools. This exception allows assert statements in development environments and short-lived CLI tools where runtime validation is necessary.",
      "metadata": {
        "pattern": "assert",
        "bug_id": "python:S1751",
        "context": "CLI tool or internal script",
        "reason": "Acceptable for runtime validation in internal tools",
        "rule": "Use of 'assert' is permitted in dev or short-lived internal CLI scripts.",
        "fix_required": false,
        "document_type": "bug_exception",
        "category": "runtime_validation"
      }
    },
    {
      "content": "Bug Exception Rule: In non-production CLI scripts, print is acceptable for feedback. Pattern: print(. Bug ID: python:S106. Context: short-lived CLI or script. Reason: Print is acceptable when logging infra is not used. This exception allows print statements in CLI scripts where proper logging infrastructure is not available or necessary.",
      "metadata": {
        "pattern": "print(",
        "bug_id": "python:S106",
        "context": "short-lived CLI or script",
        "reason": "Print is acceptable when logging infra is not used",
        "rule": "In non-production CLI scripts, print is acceptable for feedback.",
        "fix_required": false,
        "document_type": "bug_exception",
        "category": "output_handling"
      }
    },
    {
      "content": "Bug Exception Rule: Mutable default args are fine if not modified in function body. Pattern: default mutable argument. Bug ID: python:S107. Context: argument is read-only. Reason: Safe when not mutated in function. This exception allows mutable default arguments when they are used as read-only references and not modified within the function.",
      "metadata": {
        "pattern": "default mutable argument",
        "bug_id": "python:S107",
        "context": "argument is read-only",
        "reason": "Safe when not mutated in function",
        "rule": "Mutable default args are fine if not modified in function body.",
        "fix_required": false,
        "document_type": "bug_exception",
        "category": "function_parameters"
      }
    },
    {
      "content": "Bug Exception Rule: Manual sanitization is fine for CLI/logs if not rendered in browser. Pattern: sanitize HTML via replace. Bug ID: custom:manual_sanitization. Context: used in non-rendered outputs (e.g. logs). Reason: Not an XSS risk if not rendered. This exception allows manual HTML sanitization in contexts where the output is not rendered in web browsers.",
      "metadata": {
        "pattern": "sanitize HTML via replace",
        "bug_id": "custom:manual_sanitization",
        "context": "used in non-rendered outputs (e.g. logs)",
        "reason": "Not an XSS risk if not rendered",
        "rule": "Manual sanitization is fine for CLI/logs if not rendered in browser.",
        "fix_required": false,
        "document_type": "bug_exception",
        "category": "security_sanitization"
      }
    },
    {
      "content": "Bug Exception Rule: 'x == None' is acceptable in codebases using that style consistently. Pattern: == None. Bug ID: python:S3966. Context: legacy or consistent code style. Reason: Style issue, not a functional bug. This exception allows comparison with None using == operator when it's part of consistent codebase style.",
      "metadata": {
        "pattern": "== None",
        "bug_id": "python:S3966",
        "context": "legacy or consistent code style",
        "reason": "Style issue, not a functional bug",
        "rule": "'x == None' is acceptable in codebases using that style consistently.",
        "fix_required": false,
        "document_type": "bug_exception",
        "category": "code_style"
      }
    },
    {
      "content": "Bug Exception Rule: In short-lived scripts, explicit file close may be unnecessary. Pattern: open() without with. Bug ID: python:S2095. Context: short, one-shot file read. Reason: Acceptable in simple scripts. This exception allows file operations without context managers in simple, short-lived scripts where resource management is less critical.",
      "metadata": {
        "pattern": "open() without with",
        "bug_id": "python:S2095",
        "context": "short, one-shot file read",
        "reason": "Acceptable in simple scripts",
        "rule": "In short-lived scripts, explicit file close may be unnecessary.",
        "fix_required": false,
        "document_type": "bug_exception",
        "category": "resource_management"
      }
    },
    {
      "content": "Bug Exception Rule: Unused functions can be kept if part of planned extensibility. Pattern: unused function. Bug ID: python:S1144. Context: intentionally kept for CLI extensibility. Reason: May be invoked dynamically or reserved for future use. This exception allows keeping unused functions that are part of planned extensibility or may be invoked dynamically.",
      "metadata": {
        "pattern": "unused function",
        "bug_id": "python:S1144",
        "context": "intentionally kept for CLI extensibility",
        "reason": "May be invoked dynamically or reserved for future use",
        "rule": "Unused functions can be kept if part of planned extensibility.",
        "fix_required": false,
        "document_type": "bug_exception",
        "category": "code_organization"
      }
    }
  ]
}